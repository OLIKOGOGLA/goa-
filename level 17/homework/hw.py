# 1. პროგრამა, რომელიც შედარებას აკეთებს ასაკის მიხედვით
age = int(input("შეიყვანეთ თქვენი ასაკი: "))
friend_age = int(input("შეიყვანეთ თქვენი მეგობრის ასაკი: "))
if friend_age > age:
    print("თქვენი მეგობარი პატარაა.")
else:
    print("თქვენ დიდები ხართ.")

# 2. პროგრამა, რომელიც განსაზღვრავს თაობას დაბადების წლით
birth_year = int(input("შეიყვანეთ თქვენი დაბადების წელი: "))
if birth_year > 2010:
    print("თქვენი თაობა არის Gen Alpha.")

# 3. პროგრამა, რომელიც ითვლის ასაკს და 15 წლის შემდეგ ან 5 წლის წინ
age = int(input("შეიყვანეთ თქვენი ასაკი: "))
if age > 10:
    print(f"15 წლის შემდეგ თქვენ იქნებით {age + 15} წლის.")
else:
    print(f"5 წლის წინ თქვენ იყავით {age - 5} წლის.")

# 4. პროგრამა, რომელიც ითვლის მომავალ წელს დროში მოგზაურობისთვის
years_to_travel = int(input("მომავალში რამდენი წლით უნდა გადახვიდეთ? "))
birth_year = int(input("შეიყვანეთ თქვენი დაბადების წელი: "))
future_year = birth_year + years_to_travel
print(f"როდესაც {years_to_travel} წლით წახვალთ, ეს იქნება {future_year} წელი.")

# 5. for loop-ისა და while loop-ის განმარტება კომენტარებში

# for loop არის ციკლი, რომელიც ირჩევს გარკვეულ რაოდენობას ელემენტებს ან რიცხვებს, 
# და ავრცელებს მათ შესაბამისი მოქმედებების შესასრულებლად. მაგალითად, თუ გვინდა დავაბეჭდოთ რიცხვები
# 1-დან 10-მდე, გამოვიყენებთ for loop-ს:
for i in range(1, 11):
    print(i)

# while loop არის ციკლი, რომელიც სრულდება მხოლოდ მაშინ, როდესაც წინა პირობამ "True" მნიშვნელობა მიიღო.
# მაგალითად, თუ გვინდა დავაბეჭდოთ რიცხვები 1-დან 10-მდე, გამოვიყენებთ while loop-ს:
i = 1
while i <= 10:
    print(i)
    i += 1

# განსხვავება: for loop გამოიყენება მაშინ, როცა ვიცით რამდენჯერ უნდა გავიმეოროთ ოპერაცია (მაგალითად,
# განსაზღვრული რაოდენობის რიცხვი ან ელემენტი), ხოლო while loop გამოიყენება მაშინ, როცა ჩვენ არ ვიცით,
# რამდენჯერ უნდა გავიმეოროთ ოპერაცია, არამედ ის ხდება გარკვეული პირობის არსებობის შემთხვევაში.
